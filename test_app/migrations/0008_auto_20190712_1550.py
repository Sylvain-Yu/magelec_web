# Generated by Django 2.2.3 on 2019-07-12 07:50

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('test_app', '0007_auto_20190712_1448'),
    ]

    operations = [
        migrations.CreateModel(
            name='CurrentVsTorque',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speed_point', models.IntegerField()),
                ('rotate_direction', models.CharField(choices=[('clockwise', '顺时针'), ('anti-clockwise', '逆时针')], max_length=32)),
                ('control_mode', models.CharField(choices=[('Traction_Torque', '扭矩模式_主转'), ('Traction_Speed', '转速模式_主转'), ('Generation_Torque', '扭矩模式_跟转'), ('Generation_Speed', '转速模式_跟转')], max_length=32)),
                ('comment', models.CharField(blank=True, max_length=128, null=True)),
                ('c_time', models.DateTimeField(auto_now_add=True)),
                ('cooling_type', models.CharField(choices=[('Liquid cooling', '冷却液'), ('Air Cooling', '风冷')], max_length=32)),
                ('cooling_temperature', models.IntegerField()),
                ('winding_temperature_min', models.IntegerField()),
                ('winding_temperature_max', models.IntegerField()),
                ('dc_bus_voltage', models.IntegerField()),
                ('max_current_allowed', models.IntegerField()),
                ('d_50A_temperature_measured', models.FloatField(blank=True, null=True)),
                ('d_100A_temperature_measured', models.FloatField(blank=True, null=True)),
                ('d_150A_temperature_measured', models.FloatField(blank=True, null=True)),
                ('d_200A_temperature_measured', models.FloatField(blank=True, null=True)),
                ('d_250A_temperature_measured', models.FloatField(blank=True, null=True)),
                ('d_300A_temperature_measured', models.FloatField(blank=True, null=True)),
                ('d_350A_temperature_measured', models.FloatField(blank=True, null=True)),
                ('d_400A_temperature_measured', models.FloatField(blank=True, null=True)),
                ('d_450A_temperature_measured', models.FloatField(blank=True, null=True)),
                ('d_500A_temperature_measured', models.FloatField(blank=True, null=True)),
                ('d_550A_temperature_measured', models.FloatField(blank=True, null=True)),
                ('d_600A_temperature_measured', models.FloatField(blank=True, null=True)),
                ('max_current_temperature_measured', models.FloatField(blank=True, null=True)),
                ('d_50A_phase_current_measured', models.FloatField(blank=True, null=True)),
                ('d_100A_phase_current_measured', models.FloatField(blank=True, null=True)),
                ('d_150A_phase_current_measured', models.FloatField(blank=True, null=True)),
                ('d_200A_phase_current_measured', models.FloatField(blank=True, null=True)),
                ('d_250A_phase_current_measured', models.FloatField(blank=True, null=True)),
                ('d_300A_phase_current_measured', models.FloatField(blank=True, null=True)),
                ('d_350A_phase_current_measured', models.FloatField(blank=True, null=True)),
                ('d_400A_phase_current_measured', models.FloatField(blank=True, null=True)),
                ('d_450A_phase_current_measured', models.FloatField(blank=True, null=True)),
                ('d_500A_phase_current_measured', models.FloatField(blank=True, null=True)),
                ('d_550A_phase_current_measured', models.FloatField(blank=True, null=True)),
                ('d_600A_phase_current_measured', models.FloatField(blank=True, null=True)),
                ('max_current_phase_current_measured', models.FloatField(blank=True, null=True)),
                ('d_50A_torque_command', models.IntegerField(blank=True, null=True)),
                ('d_100A_torque_command', models.IntegerField(blank=True, null=True)),
                ('d_150A_torque_command', models.IntegerField(blank=True, null=True)),
                ('d_200A_torque_command', models.IntegerField(blank=True, null=True)),
                ('d_250A_torque_command', models.IntegerField(blank=True, null=True)),
                ('d_300A_torque_command', models.IntegerField(blank=True, null=True)),
                ('d_350A_torque_command', models.IntegerField(blank=True, null=True)),
                ('d_400A_torque_command', models.IntegerField(blank=True, null=True)),
                ('d_450A_torque_command', models.IntegerField(blank=True, null=True)),
                ('d_500A_torque_command', models.IntegerField(blank=True, null=True)),
                ('d_550A_torque_command', models.IntegerField(blank=True, null=True)),
                ('d_600A_torque_command', models.IntegerField(blank=True, null=True)),
                ('max_current_torque_command', models.IntegerField(blank=True, null=True)),
                ('d_50A_torque_measured', models.IntegerField(blank=True, null=True)),
                ('d_100A_torque_measured', models.IntegerField(blank=True, null=True)),
                ('d_150A_torque_measured', models.IntegerField(blank=True, null=True)),
                ('d_200A_torque_measured', models.IntegerField(blank=True, null=True)),
                ('d_250A_torque_measured', models.IntegerField(blank=True, null=True)),
                ('d_300A_torque_measured', models.IntegerField(blank=True, null=True)),
                ('d_350A_torque_measured', models.IntegerField(blank=True, null=True)),
                ('d_400A_torque_measured', models.IntegerField(blank=True, null=True)),
                ('d_450A_torque_measured', models.IntegerField(blank=True, null=True)),
                ('d_500A_torque_measured', models.IntegerField(blank=True, null=True)),
                ('d_550A_torque_measured', models.IntegerField(blank=True, null=True)),
                ('d_600A_torque_measured', models.IntegerField(blank=True, null=True)),
                ('max_current_torque_measured', models.IntegerField(blank=True, null=True)),
                ('d_50A_Kt', models.FloatField(blank=True, null=True)),
                ('d_100A_Kt', models.FloatField(blank=True, null=True)),
                ('d_150A_Kt', models.FloatField(blank=True, null=True)),
                ('d_200A_Kt', models.FloatField(blank=True, null=True)),
                ('d_250A_Kt', models.FloatField(blank=True, null=True)),
                ('d_300A_Kt', models.FloatField(blank=True, null=True)),
                ('d_350A_Kt', models.FloatField(blank=True, null=True)),
                ('d_400A_Kt', models.FloatField(blank=True, null=True)),
                ('d_450A_Kt', models.FloatField(blank=True, null=True)),
                ('d_500A_Kt', models.FloatField(blank=True, null=True)),
                ('d_550A_Kt', models.FloatField(blank=True, null=True)),
                ('d_600A_Kt', models.FloatField(blank=True, null=True)),
                ('max_current_Kt', models.FloatField(blank=True, null=True)),
                ('d_50A_Ke', models.FloatField(blank=True, null=True)),
                ('d_100A_Ke', models.FloatField(blank=True, null=True)),
                ('d_150A_Ke', models.FloatField(blank=True, null=True)),
                ('d_200A_Ke', models.FloatField(blank=True, null=True)),
                ('d_250A_Ke', models.FloatField(blank=True, null=True)),
                ('d_300A_Ke', models.FloatField(blank=True, null=True)),
                ('d_350A_Ke', models.FloatField(blank=True, null=True)),
                ('d_400A_Ke', models.FloatField(blank=True, null=True)),
                ('d_450A_Ke', models.FloatField(blank=True, null=True)),
                ('d_500A_Ke', models.FloatField(blank=True, null=True)),
                ('d_550A_Ke', models.FloatField(blank=True, null=True)),
                ('d_600A_Ke', models.FloatField(blank=True, null=True)),
                ('max_current_Ke', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '电特性试验',
                'verbose_name_plural': '电特性试验',
                'ordering': ['c_time'],
            },
        ),
        migrations.AlterField(
            model_name='motorinfo',
            name='inverter_type',
            field=models.CharField(choices=[('RMS PM250DZ', 'RMS PM250DZ'), ('RMS PM100', 'RMS PM100'), ('EMSISO EM500', 'EMSISO EM500'), ('EMSISO EM100', 'EMSISO EM100'), ('EMSISO EM200', 'EMSISO EM200'), ('unknown', '其他')], max_length=32),
        ),
        migrations.AlterField(
            model_name='motorinfo',
            name='tester1',
            field=models.CharField(choices=[('Leon Chen', '陈晓文'), ('Tiegen Ji', '季铁根'), ('Sylvain Yu', '郁松林'), ('Jiliang Hong', '洪继良'), ('Charles Li', '李文昌'), ('Brant Miao', '苗强'), ('others', '其他')], max_length=32),
        ),
        migrations.AlterField(
            model_name='motorinfo',
            name='tester2',
            field=models.CharField(choices=[('Leon Chen', '陈晓文'), ('Tiegen Ji', '季铁根'), ('Sylvain Yu', '郁松林'), ('Jiliang Hong', '洪继良'), ('Charles Li', '李文昌'), ('Brant Miao', '苗强'), ('others', '其他')], max_length=32),
        ),
    ]
